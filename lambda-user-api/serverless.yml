service: lambda-user-api
frameworkVersion: '3'

provider:
  name: aws
  region: ap-south-1
  runtime: python3.8
  environment:  # Adding environment variables here so our functions can use it
    DB_HOST: "serverles.crcaoqaoelsz.ap-south-1.rds.amazonaws.com"
    DB_NAME: "serverless" 
    DB_USER: "postgres" 
    DB_PASSWORD: "mayank1234" 
    DB_PORT: 5432

# functions:
#   api_handler:  # Single handler for all routes, enable this and disable below one to start using hanlder.py faciltiy
#     handler: src/handler.route_handler  # This is the entry point
#     events:
#       - httpApi:
#           path: /create_user
#           method: post
#       - httpApi:
#           path: /get_users
#           method: get
#       - httpApi:
#           path: /update_user
#           method: put
#       - httpApi:
#           path: /delete_user
#           method: delete
#     layers:
#       - arn:aws:lambda:ap-south-1:975050329123:layer:db-layer:1  # Ensure ARN is correct for any layers


functions:
  create_user:
    handler: src.create_user.create_user  
    events:
      - httpApi:
          path: /create_user
          method: post
    layers:
      - arn:aws:lambda:ap-south-1:975050329123:layer:db-layer:1  # arn layer created on aws lambda layer
  get_users:
    handler: src.get_user.get_users  
    events:
      - httpApi:
          path: /get_users
          method: get
    # layers:
    #   - arn:aws:lambda:ap-south-1:975050329123:layer:db-layer:1
  delete_user:
    handler: src.delete_user.delete_User  
    events:
      - httpApi:
          path: /delete_user
          method: delete
    # layers:
    #   - arn:aws:lambda:ap-south-1:975050329123:layer:db-layer:1
  update_user:
    handler: src.update_user.update_User  
    events:
      - httpApi:
          path: /update_user
          method: put
    # layers:
    #   - arn:aws:lambda:ap-south-1:975050329123:layer:db-layer:1  #IN MY CASE I TRIED APPROXIMATELY 9-10 TIME BY CREATING NEW ARN (BUT GETTING ON MY CLOUDWATCH, [ERROR] Runtime.ImportModuleError: Unable to import module 'src.create_user': No module named 'psycopg2._psycopg'Traceback (most recent call last):)

package:
  include:
    - src/**
    - db.py  ## Include db.py if it's not in src
plugins:
  - serverless-python-requirements  # Add this plugin to handle Python packages

custom:
  pythonRequirements:
    dockerizePip: true  # Ensures psycopg2 is built in a compatible environment, if you do not have docker desktop COMMENT THIS LINE {but might lead to may lead to incompatibility issues since Lambda requires libraries to be compiled for Amazon Linux. }